{"version":3,"file":"static/webpack/static/development/pages/index.js.079a2973da6f0a5ae3d2.hot-update.js","sources":["webpack:///./components/search-engine.js","webpack:///./components/search-engine.module.css?f785","webpack:///./components/search-engine.module.css"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useDebounce from './debounce';\n\nimport { CategoryLink } from './nav-link';\nimport BookmarkLink from './bookmark-link';\n\nimport classNames from 'classnames/bind';\nimport styles from './search-engine.module.css'\n\nconst minQLenght = 3;\n\nconst SearchEngine = ({ bookmarks }) => {\n\n  // State and setter for search term\n  const [query, setQuery] = useState('');\n  // State and setter for search results\n  const [results, setResults] = useState([]);\n  // State for search status (whether there is a pending API request)\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Now we call our hook, passing in the current query value.\n  // The hook will only return the latest value (what we passed in) ...\n  // ... if it's been more than 500ms since it was last called.\n  // Otherwise, it will return the previous value of query.\n  // The goal is to only have the API call fire when user stops typing ...\n  // ... so that we aren't hitting our API rapidly.\n  const debouncedQuery = useDebounce(query, 500);\n\n  // Here's where the API call happens\n  // We use useEffect since this is an asynchronous action\n  useEffect(\n    () => {\n      // Make sure we have a value (user has entered something in input)\n      if (debouncedQuery) {\n        // Set isSearching state\n        setIsSearching(true);\n        // Fire off our API call\n        searchCharacters(debouncedQuery, bookmarks).then(results => {\n          // Set back to false since request finished\n          setIsSearching(false);\n          // Set results state\n          setResults(results);\n        });\n      } else {\n        setResults([]);\n      }\n    },\n    // This is the useEffect input array\n    // Our useEffect function will only execute if this value changes ...\n    // ... and thanks to our hook it will only change if the original ...\n    // value (query) hasn't changed for more than 500ms.\n    [debouncedQuery]\n  );\n\n  return (\n    <div>\n      <form className={classNames(styles.wrapper, \"pure-form\")}>\n        <input\n          type=\"text\"placeholder=\"Search\"\n          value={query}\n          onChange={e => setQuery(e.target.value)} />\n        <button className=\"pure-button\" onClick={e => setQuery('')} disabled={query.length < minQLenght}>\n          Clear Search\n        </button>\n      </form>\n      {isSearching && <div>Searching ...</div>}\n      {results}\n    </div>\n  );\n}\n\nfunction searchCharacters(query, bookmarks) {\n  return new Promise((resolve, reject) => {\n    let output;\n    if (query.length >= minQLenght) {\n      let results = {};\n      let count = 0;\n      let re = new RegExp(query, 'gi');\n      // oooh, 3 nested for loops, not nice but will do\n      for (const cat in bookmarks) {\n        results[cat] = [];\n        for (const bookmark of bookmarks[cat]) {\n          for (const field of ['title', 'description']) {\n            if (bookmark[field].match(re)) {\n              results[cat].push(bookmark);\n              count++;\n              break;\n            }\n          }\n        }\n      }\n      output = <div>\n        <p>Your search for {query} produced {count} results</p>\n        {Object.keys(results).map((cat, iC) => <div>\n          <h2>In <CategoryLink name={cat} /> - {results[cat].length} results</h2>\n          {results[cat].map((bookmark, iB) => <BookmarkLink key={`${iC}${iB}`} {...bookmark} />)}\n        </div>)}\n      </div>\n    } else {\n      output = <p>Type at least {minQLenght} letters to trigger a search</p>\n    }\n    resolve(output);\n  });\n}\n\nexport default SearchEngine;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!./search-engine.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement)// Remember: this is development only code.\n//\n// After styles are injected, we need to remove the\n// <style> tags that set `body { display: none; }`.\n//\n// We use `requestAnimationFrame` as a way to defer\n// this operation since there may be multiple style\n// tags.\n;(self.requestAnimationFrame||setTimeout)(function(){for(var x=document.querySelectorAll('[data-next-hide-fouc]'),i=x.length;i--;){x[i].parentNode.removeChild(x[i]);}});};\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!./search-engine.module.css\",\n      function () {\n        var newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!./search-engine.module.css\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.id, newContent, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, newContent.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = newContent.locals;\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".search-engine_wrapper__1U5vs {\\n  margin: 0 1em 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"search-engine.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;AACjB\",\"file\":\"search-engine.module.css\",\"sourcesContent\":[\".wrapper {\\n  margin: 0 1em 0;\\n}\\n\"]}]);\n// Exports\nexports.locals = {\n\t\"wrapper\": \"search-engine_wrapper__1U5vs\"\n};\nmodule.exports = exports;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}